import re

# regex pattern for simple validation of LCCN
LCC_TL_PATTERN = re.compile(r'''^(?: # https://en.wikipedia.org/wiki/Library_of_Congress_Classification#Class_A_%E2%80%93_general_works
                        (?P<a>A[CEGIMNPSYZ]{1}\d?)                                               |
                        (?P<b>B[CDFHJLMPQRSTVX]?\d?)                                             | 
                        (?P<c>C[BCDEJNRST]?\d)?                                                  |
                        (?P<da>DA[W]?\d?)                                                        |
                        (?P<dj>DJ[K]?\d?)                                                        |
                        (?P<d>D[BCDEFGHKLPQRSTUX]?\d?)                                           |
                        (?P<e>E([1-9][0-9]{0,1}|[1-8][0-9]{2}|90[0-9]{1}))                      | # 11 - 909
                        (?P<f>F([1-9][0-9]{0,2}|[1-2][0-9]{3}|3[0-6][0-9]{2}|37[0-9]{2}))       | # 1 - 3799
                        (?P<g>G[ABCEFNRTV]?\d?)                                                  |
                        (?P<h>H[ABCDEFGHJMNQSTVX]?\d?)                                           |
                        (?P<j>J[ACFJKLNQSVXZ]?\d?)                                               |
                        (?P<kb>KB[MPRSTU]?\d?)                                                   |
                        (?P<kd>KD[KZ]?\d?)                                                       |
                        (?P<kj>KJ[ACEGHJKMNPQRSTVW]?\d?)                                         |
                        (?P<kl>KL[ABDEFHMNPQRSTVW]?\d?)                                          |
                        (?P<ku>KU[Q]?\d?)                                                        |  
                        (?P<k>K[EFGHZ]?\d?)                                                      |
                        (?P<l>L[ABCDEFGHJT]?\d?)                                                 |
                        (?P<m>M[LT]?\d?)                                                         |
                        (?P<n>N[ABCDEKX]?\d?)                                                    |
                        (?P<p>P[ABCEFGHJKLMNQRSTZ]?\d?)                                          |
                        (?P<q>Q[ABCDEHKLMPR]?\d?)                                                |
                        (?P<r>R[ABCDEFGJKLMSTVXW]?\d?)                                           |
                        (?P<s>S[SBDFHK]?\d?)                                                     |
                        (?P<t>T[ACDEFGHJKLNPRSTX]?\d?)                                           |
                        (?P<u>U[ABCDEFGH]?\d?)                                                   |
                        (?P<v>V[ABCDEFGHKM]?\d?)                                                 |
                        (?P<z>Z[A]?\d?)
                        )$''')

# sub category ranges for deeper validation of sub categories
LCC_RANGES = {
    'ac': (1, 999),
    'ae': (1, 90),
    'ag': (2, 600),
    'ai': (1, 21),
    'am': (1, 501),
    'ap': (1, 271),
    'as': (1, 945),
    'ay': (10, 2001),
    'az': (20, 999),
    'b':  (1, 5802),
    'bc': (1, 199),
    'bd': (10, 701),
    'bf': (1, 2055),
    'bh': (1, 301),
    'bj': (1, 2195),
    'bl': (1, 2790),
    'bm': (1, 990),
    'bp': (1, 610),
    'bq': (1, 9800),
    'br': (1, 1725),
    'bs': (1, 2970),
    'bv': (1, 5099),
    'bx': (1, 9999),
    'c':  (1, 51),
    'cb': (3, 482),
    'cc': (1, 960),
    'cd': (1, 6471),
    'ce': (1, 97),
    'cj': (1, 6661),
    'cn': (1, 1355),
    'cr': (1, 6305),
    'cs': (1, 3090),
    'ct': (21, 9999),
    'd':  (1, 2027),
    'da': (1, 995),
    'daw':(1001, 1051),
    'db': (1, 3150),
    'dc': (1, 947),
    'dd': (1, 905),
    'de': (1, 100),
    'df': (10, 951),
    'dg': (11, 999),
    'dh': (1, 925),
    'dj': (1, 500),
    'djk':(1,77),
    'dk': (1, 949.5),
    'dl': (1, 1180),
    'dp': (1, 402),
    'dq': (1, 851),
    'dr': (1, 2285),
    'ds': (1, 937),
    'dt': (1, 3415),
    'du': (1, 950),
    'dx': (101, 301),
    'g':  (1, 922),
    'ga': (1, 1776),
    'gb': (3, 5030),
    'gc': (1, 1581),
    'ge': (1, 350),
    'gf': (1, 900),
    'gn': (1, 890),
    'gr': (1, 950),
    'gt': (1, 7070),
    'gv': (1, 1860),
    'h': (1, 99),
    'ha': ( 1, 4737),
    'hb': (1, 3840),
    'hc': (10, 1085),
    'hd': (20, 9999),
    'he': (1, 9990),
    'hf': (1, 6182),
    'hg': (1, 9999),
    'hj': (9, 9940),
    'hm': (1, 1281),
    'hn': (1, 995),
    'hq': (1, 2044),
    'hs': (1, 3371),
    'ht': (1, 1595),
    'hv': (1, 9960),
    'hx': (1, 970.7),
    'j': (1, 981),
    'ja': (1, 92),
    'jc': (11, 605),
    'jf': (20, 2112),
    'jj': (1000, 1019),
    'jk': (1, 9993),
    'jl': (1, 3899),
    'jn': (1, 9689),
    'jq': (21, 6651),
    'js': (39, 8500),
    'jv': (1, 9480),
    'jx': (1, 6650),
    'jz': (5, 6350),
    'k': (1, 7720),
    'kb': (1, 4855),
    'kbm': (1, 4855),
    'kbp': (1, 4860),
    'kbr': (2, 4090),
    'kbu': (2, 4820),
    'kd': (51, 9500),
    'kdc': (51, 990),
    'kde': (21, 580),
    'kdg': (26, 540),
    'kdk': (21, 1950),
    'kdz': (1, 4999),
    'ke': (1, 9450),
    'kea': (1, 599),
    'keb': (1, 599),
    'kem': (1, 599),
    'ken': [(1201, 1799), (5401, 5999), (7401, 7999)],
    'keo': (1, 1199),
    'kep': (1, 599),
    'keq': (1, 1199),
    'kes': (1, 599),
    'key': (1, 599),
    'kez': (1, 9999),
    'kf': (1, 9827),
    'kfa': [(1, 599), (1201, 1799), (2401, 2999), (3601, 4199)],
    'kfc': [(1, 1199), (1801, 2399), (3601, 4199)],
    'kfd': [(1, 599), (1201, 1799)],
    'kff': (1, 599),
    'kfg': (1, 599),
    'kfh': (1, 599),
    'kfi': [(1201, 1799), (3001, 3599), (4201, 4799)],
    'kfk': [(1, 599), (1201, 1799)],
    'kfl': (1, 599),
    'kfm': [(1, 599), (1201, 1799), (2401, 2999), (4201, 4799), (5401, 5999), (6601, 7199), (7801, 8399), (9001, 9599)],
    'kfn': [(1, 599), (601, 1199), (1201, 1799), (1801, 2399), (3601, 4199), (5001, 6199), (7401, 7999), (8601, 9199)],
    'kfo': [(1, 599), (1201, 1799), (2401, 2999)],
    'kfp': (1, 599),
    'kfr': (1, 599),
    'kfs': [(1801, 2399), (3001, 3599)],
    'kft': [(1, 599), (1201, 1799)],
    'kfu': (1, 599),
    'kfv': [(1, 599), (2401, 2999)],
    'kfw': [(1, 599), (1201, 1799), (2401, 2999), (4201, 4799)],
    'kfx': (1, 9999),
    'kfz': [(1801 -  2399), (8601, 9199)],
    'kg': (1, 999),
    'kga': (1, 9000),
    'kgb': (1, 9000),
    'kgc': (1, 9800),
    'kgd': (1, 9990),
    'kge': (1, 9990),
    'kgf': (1, 9990),
    'kgg': (1, 9800),
    'kgh': [(1, 8000), (9001, 9499)],
    'kgj': [(1, 999), (7001, 7499)],
    'kgk': [(1, 499), (1001, 1499)],
    'kgl': [(1, 499), (1001, 1499), (2001, 2499), (3001, 3499), (4001, 4499), (5001, 5999), (6001, 6499)],
    'kgm': (1, 499),
    'kgn': (1, 9800),
    'kgp': [(1, 499), (2001, 2499)],
    'kgq': (1, 9800),
    'kgr': [
        (1, 499),
        (1001, 1499),
        (2001, 2499),
        (3001, 3499),
        (5001, 5499)
        ],
    'kgs': (1, 9000),
    'kgt': [
        (1, 499),
        (1001, 1499),
        (2001, 2499),
        ],
    'kgu': (1, 499),
    'kgv': (1, 8200),
    'kgw': [
        (1, 499),
        (2001, 2499),
        (3001, 3499),
        (5001, 5499),
        (7001, 7499),
        (8001, 8499)
    ],
    'kgx': (1, 499),
    'kgy': (1, 499),
    'kgz': (1, 499)



}

SPLIT_CHARS = re.compile(r'(?<=\D)(?=\d)')